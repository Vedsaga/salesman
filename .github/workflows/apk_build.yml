# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: APK Build

on:
  push:
    branches: [ master ]
#  pull_request:
#    branches: [ deploy ]

jobs:
  # flutter_test:
  #   name: Run flutter test and analyze
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-java@v1
  #       with:
  #         java-version: "12.x"
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         channel: "stable"
  #     - run: flutter pub get
  #   #  - run: flutter analyze

  #     # Your project will need to have tests in test/ and a dependency on
  #     # package:test for this step to succeed. Note that Flutter projects will
  #     # want to change this to 'flutter test'.
  #     - name: IOS Build
  #       run: flutter build ios --release --no-codesign


  build_apk:
    name: Build Flutter (Android)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
          channel: 'dev'
    - run: flutter pub get
    - run: flutter build apk --target-platform android-arm,android-arm64 --split-per-abi
#     - run: flutter build appbundle --target-platform android-arm,android-arm64
    
    
    # Upload generated apk to the artifacts.
    # - uses: actions/upload-artifact@v1
    #   with:
    #     name: release-apk
    #     path: build/app/outputs/apk/release/app-release.apk

    # - run: flutter build appbundle
    - name: Upload APK
      uses: actions/upload-artifact@master
      with:
        name: apk-build
        path: build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk

    # - uses: actions/upload-artifact@v1
    #   with:
    #     name: release-apk
    #     path: build/app/outputs/apk/release/app-release.apk
